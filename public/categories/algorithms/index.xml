<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms on Yuan Meng</title>
    <link>http://localhost:1313/categories/algorithms/</link>
    <description>Recent content in Algorithms on Yuan Meng</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>mycaptainmy@gmail.com (Yuan Meng)</managingEditor>
    <webMaster>mycaptainmy@gmail.com (Yuan Meng)</webMaster>
    <copyright>Yuan Meng</copyright>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code ML Algorithms From Scratch</title>
      <link>http://localhost:1313/posts/md_coding/</link>
      <pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><author>mycaptainmy@gmail.com (Yuan Meng)</author>
      <guid>http://localhost:1313/posts/md_coding/</guid>
      <description>&lt;p&gt;Coding interviews can mean different things for &amp;ldquo;traditional&amp;rdquo; software engineers (back-end, front-end, full-stack, etc.) and engineers with a machine learning focus. Apart from LeetCode-style questions, ML engineers (as well as applied scientists, research engineers, and, occasionally, machine learning data scientists) may be asked to implement a classic ML algorithm from scratch during an interview.&lt;/p&gt;&#xA;&lt;p&gt;This may sound scary if you&amp;rsquo;ve only used libraries to train models without understanding how learning algorithms work under the hood. Moreover, there are way too many algorithms to memorize. The good news is, only 4 algorithms are commonly asked in interviews: &lt;strong&gt;Linear regression&lt;/strong&gt;, &lt;strong&gt;logistic regression&lt;/strong&gt;, &lt;strong&gt;k-nearest neighbors&lt;/strong&gt; (k-NN), and &lt;strong&gt;k-means&lt;/strong&gt;. You&amp;rsquo;re probably not gonna code a transformer on the fly in 45 minutes. Let&amp;rsquo;s implement each using vanilla NumPy (and some built-in libraries).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
